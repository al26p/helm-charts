global:
  image:
    repository: "ubuntu"
    tag: "test"

replicaCount: 1

image:
  repository: ""
  pullPolicy: Always
  tag: ""
  pullSecrets: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

containerName: ""

initContainers: []

sidecars: []

lifecycleHooks: {}

podAnnotations: {}

revisionHistoryLimit: 2

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

networkPolicy:
  egress:
    enabled: false
    content: []
  ingress:
    enabled: false
    content: []

service:
  enabled: true
  type: ClusterIP
  protocol: TCP
  port: 80

containerPort: 3000

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: Prefix
  tls: []
  # - secretName: chart-example-tls
  #   hosts:
  #   - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 300
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe: {}
  # tcpSocket:
  #   port: http
  # initialDelaySeconds: 10
  # periodSeconds: 30
  # timeoutSeconds: 10
  # successThreshold: 1
  # failureThreshold: 10
readinessProbe: {}
  # httpGet:
  #   path: /health
  #   port: http
  # initialDelaySeconds: 10
  # periodSeconds: 60
  # timeoutSeconds: 10
  # successThreshold: 1
  # failureThreshold: 10

vpaRecommender:
  enabled: false

pdb:
  enabled: true
  # Optionnal
  minAvailable: 1
  # Optionnal
  # maxUnavailable: 5

env:
  - name: APP_ENV
    value: test

envFrom: []

command: []

args: []

volumes:
  - name: staging-website-files
    secret:
      defaultMode: 420
      secretName: staging-website-files
  - name: shared-files
    emptyDir: {}
  - name: nginx-config
    configMap:
      name: nginx-config

volumeMounts:
  - name: shared-files
    mountPath: /usr/share/nginx/html

cronJobs:
  - name: my-cronjob
    schedule: "0 0 * * *"
    image: # Use global image if not defined
      repository: "hello-world"
      pullPolicy: Always
    concurrencyPolicy: ""
    imagePullPolicy: ""
    failedJobsHistoryLimit: ""
    terminationGracePeriodSeconds: ""
    successfulJobsHistoryLimit: ""
    restartPolicy: ""
    securityContext:
      privileged: true
      allowPrivilegeEscalation: true
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 3000
      fsGroup: 2000
      fsGroupChangePolicy: "OnRootMismatch"
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    command:
      - "hello command"
    args:
      - "hello args"
    env:
      - name: "MYVAR"
        value: "my-value"
    envFrom:
      - secretRef:
          name: "my-secret"
